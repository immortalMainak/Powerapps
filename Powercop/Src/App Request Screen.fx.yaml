"'App Request Screen' As screen":
    OnHidden: |
        =Concurrent(
            Reset(NavComponent_AppReq),
            Set(
                varItemId,
                0
            ),
            Set(
                varNavigated,
                false
            ),
            Reset(TextInput2),
            Reset(ComboBox1),
            UpdateContext(
                {
                    varItem: Blank(),
                    varAttachmentItem: Blank()
                }
            )
        );
    OnVisible: |-
        =UpdateContext({varLoadSpinner: true, varItem: Blank(), varAttachmentItem: Blank(), varShowAttachment: false, varShowAppDetails: true, varShowInitiatorDetails: true, varShowWf: true, varAppDetails: true, varStatus: Blank(),
        varUATApprovedDate: Blank(), varBuildApprovedDate: Blank(), varProdApprovedDate: Blank(), varApproverTmp: $"{varUserName} ({varUserEmailLower})"});
        Concurrent(Reset(NavComponent_AppReq), UpdateContext({varIsDraft: true, varShowDeletePopup: false}), 
            If(varItemId > 0, EditForm(Form_AppReq);
                UpdateContext({varItem: With({varTxtId: Text(varItemId)}, LookUp(AppRequests, Id = varTxtId))});
                UpdateContext({varAttachmentItem: With({varTitleTmp: Text(varItem.AppRequest)},
                    If(!IsBlank(varItem), LookUp(AttachmentList, Title = varTitleTmp), Blank()))});
            , ResetForm(Form_AppReq); NewForm(Form_AppReq);
                If(IsBlank(varAttachmentItem), ResetForm(frm_Attach); NewForm(frm_Attach);)
            )
        );
        If(!IsBlank(varItem), UpdateContext({varStatus: varItem.'App Request Status'}));
        UpdateContext({varLoadSpinner: false});

    Form_AppReq As form:
        DataSource: =AppRequests
        DefaultMode: =If(varItemId = 0, FormMode.New, FormMode.Edit)
        Height: =Parent.Height - Self.Y - ButtonContainer_2.Height //- frm_Attach.Height
        Item: |-
            =If(varItemId> 0, With({varTxtId: Text(varItemId)}, LookUp(AppRequests, Id = varTxtId)), Blank())
        NumberOfColumns: =1
        OnSuccess: |-
            =UpdateContext({varLoadSpinner: true});
            Set(varItemId, Value(Self.LastSubmit.Id));
            UpdateContext({varItem: Self.LastSubmit});
            UpdateContext({varStatus: varItem.'App Request Status', varBuildApprovedDate: Blank(), varUATApprovedDate: Blank(), varProdApprovedDate: Blank()});
            If(frm_Attach.Mode = FormMode.View, EditForm(frm_Attach));
            SubmitForm(frm_Attach);
            /*If(Self.LastSubmit.'COE Approval Status' = 'COE Approval Status (AppRequests)'.Approved && !IsBlank(Self.LastSubmit.'App Url'), Patch(Rev_SolutionReview, Defaults(Rev_SolutionReview), {LbSolutionReviewName: Self.LastSubmit.'App Name', 'App Document URI': Self.LastSubmit.'App Url', Chc_SolutionReview_Status: Chc_StatusImport.'In Progress'}));*/
            EditForm(Form_AppReq);
        SnapToColumns: =false
        Width: =Parent.Width - Self.X - Self.X
        X: =Parent.Width * 0
        Y: =HeaderComponent_AppReq.Y + HeaderComponent_AppReq.Height
        ZIndex: =1

        DataCard1 As typedDataCard.blankCard:
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            Label4 As label:
                Align: =Align.Center
                Fill: =RGBA(237, 237, 237, 1)
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                Size: =14
                Text: ="Request Details"
                Width: =Parent.Width
                ZIndex: =1

            Button2 As button:
                BorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Label4.Height
                HoverColor: =RGBA(255, 255, 255, 0)
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: |-
                    =UpdateContext({varShowAppDetails: !varShowAppDetails});
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Width: =Label4.Width
                X: =Label4.X
                Y: =Label4.Y
                ZIndex: =2

        "'App Name_DataCard9' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_name"
            Default: =ThisItem.'App Name'
            DisplayMode: =If(IsBlank(varItem) || (varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.Draft] && varItem.InitiatorEmail = varUserEmailLower), Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_name")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Label140.Y*2 + Label140.Height
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_name")
            Required: =true
            Update: =DataCardValue140.Text
            Visible: =varShowAppDetails
            Width: =Parent.Width
            X: =1
            Y: =0
            ZIndex: =1

            Label140 As label:
                BorderThickness: =1
                Height: =DataCardValue140.Height + Self.BorderThickness*2
                Text: =""
                Width: =DataCardValue140.Width + Self.BorderThickness*2
                X: =DataCardValue140.X - Self.BorderThickness
                Y: =DataCardValue140.Y - Self.BorderThickness
                ZIndex: =1

            DataCardKey140 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.2
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue140.Height / 2) - (Self.Height / 2)
                ZIndex: =2

            DataCardValue140 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                HintText: =If(Self.DisplayMode = DisplayMode.View, "", $"Enter {Parent.DisplayName}")
                HoverFill: =RGBA(186, 202, 226, 0)
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =If(Self.DisplayMode = DisplayMode.View, Self.Text, Parent.DisplayName)
                Width: =(Parent.Width - 60) * 0.8
                X: =DataCardKey140.X + DataCardKey140.Width
                Y: =10
                ZIndex: =3

            ErrorMessage139 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue140.Y + DataCardValue140.Height
                ZIndex: =4

            StarVisible139 As label:
                Align: =Align.Center
                Color: =RGBA(255, 0, 0, 1)
                Height: =DataCardKey140.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey140.Y
                ZIndex: =5

        "'App Description_DataCard3' As typedDataCard.textualMultiLineEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_appdescription"
            Default: =ThisItem.'App Description'
            DisplayMode: =If(IsBlank(varItem) || (varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.Draft] && varItem.InitiatorEmail = varUserEmailLower), Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_appdescription")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Label139.Height + Label139.Y*2
            Required: =false
            Update: =DataCardValue139.Text
            Visible: =varShowAppDetails
            Width: =Parent.Width
            X: =0
            Y: =1
            ZIndex: =1

            Label139 As label:
                BorderThickness: =1
                Height: =DataCardValue139.Height + Self.BorderThickness*2
                Text: =""
                Width: =DataCardValue139.Width + Self.BorderThickness*2
                X: =DataCardValue139.X - Self.BorderThickness
                Y: =DataCardValue139.Y - Self.BorderThickness
                ZIndex: =1

            DataCardKey139 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.2
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue139.Height / 2) - (Self.Height / 2)
                ZIndex: =2

            DataCardValue139 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                Height: =80
                HintText: =If(Self.DisplayMode = DisplayMode.Edit, $"Enter {Parent.DisplayName}", Blank())
                HoverFill: =RGBA(186, 202, 226, 0)
                Mode: =TextMode.MultiLine
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =If(Self.DisplayMode = DisplayMode.View, Self.Text, Parent.DisplayName)
                Width: =(Parent.Width - 60) * 0.8
                X: =DataCardKey139.X + DataCardKey139.Width
                Y: =10
                ZIndex: =3

            ErrorMessage138 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue139.Y + DataCardValue139.Height
                ZIndex: =4

            StarVisible138 As label:
                Align: =Align.Center
                Height: =DataCardKey139.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey139.Y
                ZIndex: =5

        "'App Related Queries_DataCard3' As typedDataCard.textualMultiLineEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_apprelatedqueries"
            Default: =ThisItem.'App Related Queries'
            DisplayMode: =If(IsBlank(varItem) || (varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.Draft] && varItem.InitiatorEmail = varUserEmailLower), Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_apprelatedqueries")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Label141.Y*2 + Label141.Height
            Required: =false
            Update: =DataCardValue141.Text
            Visible: =varShowAppDetails
            Width: =Parent.Width
            X: =0
            Y: =2
            ZIndex: =1

            Label141 As label:
                BorderThickness: =1
                Height: =DataCardValue141.Height + Self.BorderThickness*2
                Text: =""
                Width: =DataCardValue141.Width + Self.BorderThickness*2
                X: =DataCardValue141.X - Self.BorderThickness
                Y: =DataCardValue141.Y - Self.BorderThickness
                ZIndex: =1

            DataCardKey141 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.2
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue141.Height / 2) - (Self.Height / 2)
                ZIndex: =2

            DataCardValue141 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                Height: =80
                HintText: =If(Self.DisplayMode = DisplayMode.Edit, $"Enter {Parent.DisplayName}", Blank())
                HoverFill: =RGBA(186, 202, 226, 0)
                Mode: =TextMode.MultiLine
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.8
                X: =DataCardKey141.X + DataCardKey141.Width
                Y: =10
                ZIndex: =3

            ErrorMessage140 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue141.Y + DataCardValue141.Height
                ZIndex: =4

            StarVisible140 As label:
                Align: =Align.Center
                Height: =DataCardKey141.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey141.Y
                ZIndex: =5

        "'Business Benefits_DataCard1' As typedDataCard.textualMultiLineEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_businessbenefits"
            Default: =ThisItem.'Business Benefits'
            DisplayMode: =If(IsBlank(varItem) || (varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.Draft] && varItem.InitiatorEmail = varUserEmailLower), Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_businessbenefits")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Label144.Y*2 + Label144.Height
            Required: =false
            Update: =DataCardValue144.Text
            Visible: =varShowAppDetails
            Width: =Parent.Width
            X: =0
            Y: =3
            ZIndex: =1

            Label144 As label:
                BorderThickness: =1
                Height: =DataCardValue144.Height + Self.BorderThickness*2
                Text: =""
                Width: =DataCardValue144.Width + Self.BorderThickness*2
                X: =DataCardValue144.X - Self.BorderThickness
                Y: =DataCardValue144.Y - Self.BorderThickness
                ZIndex: =1

            DataCardKey146 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.2
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue144.Height / 2) - (Self.Height / 2)
                ZIndex: =2

            DataCardValue144 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                Height: =80
                HintText: =If(Self.DisplayMode = DisplayMode.Edit, $"Enter {Parent.DisplayName}", Blank())
                HoverFill: =RGBA(186, 202, 226, 0)
                Mode: =TextMode.MultiLine
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.8
                X: =DataCardKey146.X + DataCardKey146.Width
                Y: =10
                ZIndex: =3

            ErrorMessage145 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue144.Y + DataCardValue144.Height
                ZIndex: =4

            StarVisible145 As label:
                Align: =Align.Center
                Height: =DataCardKey146.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey146.Y
                ZIndex: =5

        DataCard4 As typedDataCard.blankCard:
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            Width: =Parent.Width
            X: =1
            Y: =3
            ZIndex: =1

            Label4_3 As label:
                Align: =Align.Center
                Fill: =RGBA(237, 237, 237, 1)
                FontWeight: =FontWeight.Semibold
                Height: =50
                OnSelect: |-
                    =UpdateContext({varAppDetails: !varAppDetails});
                Size: =14
                Text: ="App Details"
                Width: =Parent.Width
                Y: =
                ZIndex: =1

            Button2_3 As button:
                BorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Label4_3.Height
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: |-
                    =UpdateContext({varAppDetails: !varAppDetails});
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Width: =Label4_3.Width
                X: =Label4_3.X
                Y: =Label4_3.Y
                ZIndex: =2

        "'Who will develop this app?_DataCard1' As typedDataCard.comboBoxOptionSetSingleEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_whowilldevelopthisapp"
            Default: =ThisItem.'Who will develop this app?'
            DisplayMode: =If(IsBlank(varItem) || (varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.Draft] && varItem.InitiatorEmail = varUserEmailLower), Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_whowilldevelopthisapp")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =true
            Update: =DataCardValue151.Selected.Value
            Visible: =varAppDetails
            Width: =Parent.Width * 0.5
            X: =0
            Y: =5
            ZIndex: =1

            DataCardKey155 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                X: =30
                Y: =10 + (DataCardValue151.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue151 As combobox:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultSelectedItems: =[Parent.Default]
                DisplayFields: =["Value"]
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                InputTextPlaceholder: =$"Select {Parent.DisplayName}"
                Items: =Choices('Who will develop this app? (AppRequests)')
                NoSelectionText: =$"Select {Parent.DisplayName}"
                SearchFields: =["Value"]
                SearchItems: =Choices('Who will develop this app? (AppRequests)',DataCardValue151.SearchText)
                SelectMultiple: =false
                Tooltip: =Parent.DisplayName
                Visible: =varShowAppDetails
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey155.X + DataCardKey155.Width
                Y: =10
                ZIndex: =2

            ErrorMessage154 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue151.Y + DataCardValue151.Height
                ZIndex: =3

            StarVisible154 As label:
                Align: =Align.Center
                Color: =RGBA(255, 0, 0, 1)
                Height: =DataCardKey155.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey155.Y
                ZIndex: =4

        "'App Submitted Date_DataCard3' As typedDataCard.dateTimeEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_requestraiseddate"
            Default: =If(Parent.Mode = FormMode.New, Today(), If(IsBlank(ThisItem.'App Submitted Date'), DateValue(varItem.'Created On'), ThisItem.'App Submitted Date'))
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_requestraiseddate")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =DateValue1.SelectedDate + Time(Value(HourValue1.Selected.Value), Value(MinuteValue1.Selected.Value), 0)
            Visible: =varAppDetails && Parent.Mode <> FormMode.New
            Width: =Parent.Width*0.5
            X: =1
            Y: =5
            ZIndex: =1

            DataCardKey142 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 //+ (DateValue1.Height / 2) + (Self.Height / 2)
                ZIndex: =1

            DateValue1 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultDate: =Parent.Default
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                FocusedBorderThickness: =1
                InputTextPlaceholder: =""
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =5
                Size: =13
                StartYear: =1899
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey142.X + DataCardKey142.Width
                Y: =10
                ZIndex: =2

            HourValue1 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Hour(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =If(Self.Visible, DateValue1.Height, 0)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =DateValue1.Width / 2 - 5
                X: =DateValue1.X
                Y: =DateValue1.Y + DateValue1.Height + 10
                ZIndex: =3

            Separator1 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Bold
                Height: =HourValue1.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: |-
                    =":"
                Visible: =false
                Width: =10
                Wrap: =false
                X: =HourValue1.X + HourValue1.Width
                Y: =HourValue1.Y
                ZIndex: =4

            MinuteValue1 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Minute(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue1.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =HourValue1.Width
                X: =HourValue1.X + HourValue1.Width + Separator1.Width
                Y: =HourValue1.Y
                ZIndex: =5

            ErrorMessage141 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue1.Y + HourValue1.Height
                ZIndex: =6

            StarVisible141 As label:
                Align: =Align.Center
                Height: =DataCardKey142.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey142.Y
                ZIndex: =7

        "'App Type_DataCard1' As typedDataCard.comboBoxOptionSetSingleEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_apptype"
            Default: =ThisItem.'App Type'
            DisplayMode: =If(ThisItem.'App Request Status' = 'App Request Status (AppRequests)'.'Build in progress' && varItem.InitiatorEmail = varUserEmailLower, Parent.DisplayMode, DisplayMode.View)
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_apptype")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =Self.Visible
            Update: =DataCardValue152.Selected.Value
            Visible: =varAppDetails && Parent.Mode <> FormMode.New
            Width: =Parent.Width * 0.5
            X: =
            Y: =6
            ZIndex: =1

            DataCardKey156 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue152.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue152 As combobox:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultSelectedItems: =[Parent.Default]
                DisplayFields: =["Value"]
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                InputTextPlaceholder: =$"Select {Parent.DisplayName}"
                IsSearchable: =false
                Items: =Choices('App Type (AppRequests)')
                NoSelectionText: =$"Select {Parent.DisplayName}"
                SearchFields: =["Value"]
                SearchItems: =[]
                SelectMultiple: =false
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey156.X + DataCardKey156.Width
                Y: =10
                ZIndex: =2

            ErrorMessage155 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue152.Y + DataCardValue152.Height
                ZIndex: =3

            StarVisible155 As label:
                Align: =Align.Center
                Color: =RGBA(255, 0, 0, 1)
                Height: =DataCardKey156.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey156.Y
                ZIndex: =4

        "'App Url_DataCard1' As typedDataCard.urlEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_appurl"
            Default: =ThisItem.'App Url'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_appurl")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =Self.Visible
            Update: =If(First(DataCardValue152.SelectedItems).Value = 'App Type (AppRequests)'.Canvas, DataCardValue142.Text, Blank())
            Visible: =ThisItem.'App Request Status' = 'App Request Status (AppRequests)'.'Build in progress' && First(DataCardValue152.SelectedItems).Value = 'App Type (AppRequests)'.Canvas && varAppDetails
            Width: =Parent.Width * 0.5
            X: =1
            Y: =6
            ZIndex: =1

            DataCardKey143 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: ="App"
                Width: =(Parent.Width - 60) * 0.3
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue142.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue142 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =First(ComboBox142.SelectedItems).AppUrl
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =(Parent.Width - 60) * 0.7
                X: =DataCardKey143.X + DataCardKey143.Width
                Y: =10
                ZIndex: =2

            ErrorMessage142 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue142.Y + DataCardValue142.Height
                ZIndex: =3

            StarVisible142 As label:
                Align: =Align.Center
                Color: =RGBA(255, 0, 0, 1)
                Height: =DataCardKey143.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey143.Y
                ZIndex: =4

            ComboBox142 As combobox:
                BorderThickness: =1
                DefaultSelectedItems: =Filter(Filter(ShowColumns(AddColumns(PowerAppsforMakers.GetApps({}).value, "AppUrl",properties.appUris.documentUri.value, "NameNew", properties.displayName), "AppUrl", "NameNew", "name"), !IsBlank(AppUrl)),AppUrl = Parent.Default || name = ThisItem.AppId)
                DisplayFields: =["NameNew"]
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                Height: =DataCardValue142.Height
                InputTextPlaceholder: ="Select App"
                IsSearchable: =false
                Items: =Filter(ShowColumns(AddColumns(PowerAppsforMakers.GetApps({}).value, "AppUrl", properties.appUris.documentUri.value, "NameNew", properties.displayName), "AppUrl", "NameNew", "name"), !IsBlank(AppUrl))
                NoSelectionText: ="Select App"
                SearchFields: =["NameNew"]
                SearchItems: =[]
                SelectMultiple: =false
                Width: =DataCardValue142.Width
                X: =DataCardValue142.X
                Y: =DataCardValue142.Y
                ZIndex: =5

        DataCard3 As typedDataCard.blankCard:
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Width: =Parent.Width
            X: =0
            Y: =8
            ZIndex: =1

            Label4_2 As label:
                Align: =Align.Center
                Fill: =RGBA(237, 237, 237, 1)
                FontWeight: =FontWeight.Semibold
                Height: =50
                Size: =14
                Text: ="Workflow Details"
                Width: =Parent.Width
                ZIndex: =1

            Button2_2 As button:
                BorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Label4_2.Height
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: |-
                    =UpdateContext({varShowWf: !varShowWf});
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Width: =Label4_2.Width
                X: =Label4_2.X
                Y: =Label4_2.Y
                ZIndex: =2

        "'Developer Name_DataCard3' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_developername"
            Default: =ThisItem.'Developer Name'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_developername")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_developername")
            Required: =false
            Update: =DataCardValue147.Text
            Visible: =varShowWf
            Width: =Parent.Width * 0.5
            X: =0
            Y: =9
            ZIndex: =1

            DataCardKey149 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue147.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue147 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =DisplayMode.View
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.Default
                Visible: =!ComboBox147.Visible
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey149.X + DataCardKey149.Width
                Y: =10
                ZIndex: =2

            ErrorMessage148 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue147.Y + DataCardValue147.Height
                ZIndex: =3

            StarVisible148 As label:
                Align: =Align.Center
                Height: =DataCardKey149.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey149.Y
                ZIndex: =4

            ComboBox147 As combobox:
                DefaultSelectedItems: |-
                    =If(!IsBlank(varItem), Filter(ForAll(Filter(Split(Parent.Default, ")"), !IsBlank(Value)),First(Office365Users.SearchUser({searchTerm: Last(Split(ThisRecord.Value, "(")).Value, top: 1}))), !IsBlank(Mail)), Blank())
                DisplayFields: =["DisplayName","Mail"]
                DisplayMode: =Parent.DisplayMode
                Height: =DataCardValue147.Height
                Items: |-
                    =Filter(Office365Users.SearchUser({searchTerm: Self.SearchText, top: 50}), !IsBlank(Mail), AccountEnabled)
                SearchFields: =["DisplayName"]
                SearchItems: |-
                    =Search(Filter(Office365Users.SearchUser({searchTerm: Self.SearchText, top: 50}), !IsBlank(Mail), AccountEnabled),ComboBox147.SearchText,"DisplayName")
                Template: =ListItemTemplate.Double
                Visible: =Self.DisplayMode = DisplayMode.Edit && varIsCoE && varItem.'Who will develop this app?' in ['Who will develop this app? (AppRequests)'.'Developer assisted App development', 'Who will develop this app? (AppRequests)'.'I want COE to build the app'] && varItem.'App Request Status' = 'App Request Status (AppRequests)'.'Build Approval Requested'
                Width: =DataCardValue147.Width
                X: =DataCardValue147.X
                Y: =DataCardValue147.Y
                ZIndex: =5

        "'App Request Status_DataCard1' As typedDataCard.comboBoxOptionSetSingleEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_apprequeststatus"
            Default: |-
                =If(Parent.Mode = FormMode.View, ThisItem.'App Request Status',
                If(!IsBlank(varStatus), varStatus,
                If(varIsDraft, 'App Request Status (AppRequests)'.Draft, 
                If(IsBlank(varItem), 'App Request Status (AppRequests)'.'Build Approval Requested',
                Switch(varItem.'App Request Status', 'App Request Status (AppRequests)'.Draft, 'App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Build Approval sent back to initiator', 'App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Prod Deployment Rejected', 'App Request Status (AppRequests)'.'Prod Deployment Requested', 'App Request Status (AppRequests)'.'UAT Deployment Rejected', 'App Request Status (AppRequests)'.'UAT Deployment Requested', ThisItem.'App Request Status')))))
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_apprequeststatus")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =DataCardValue3.Selected.Value
            Visible: =varIsCoE && varShowWf && Parent.Mode <> FormMode.New
            Width: =Parent.Width * 0.5
            X: =1
            Y: =9
            ZIndex: =1

            DataCardKey3 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue3.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue3 As combobox:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultSelectedItems: =[Parent.Default]
                DisplayFields: =["Value"]
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                IsSearchable: =false
                Items: =Choices('App Request Status (AppRequests)')
                SearchFields: =["Value"]
                SearchItems: =[]
                SelectMultiple: =false
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey3.X + DataCardKey3.Width
                Y: =10
                ZIndex: =2

            ErrorMessage3 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue3.Y + DataCardValue3.Height
                ZIndex: =3

            StarVisible3 As label:
                Align: =Align.Center
                Height: =DataCardKey3.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey3.Y
                ZIndex: =4

        AppApprovalDate_DataCard1 As typedDataCard.dateTimeEditCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_approvaldate"
            Default: =ThisItem.AppApprovalDate
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_approvaldate")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =If(!IsBlank(DateValue2.SelectedDate), DateValue2.SelectedDate + Time(Value(HourValue2.Selected.Value), Value(MinuteValue2.Selected.Value), 0), Blank())
            Visible: =!IsBlank(Self.Default) && varShowWf
            Width: =Parent.Width * 0.5
            X: =1
            Y: =10
            ZIndex: =1

            DataCardKey144 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: ="Build Proessed Date"
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10// + (DateValue2.Height / 2) + (Self.Height / 2)
                ZIndex: =1

            DateValue2 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultDate: =If(!IsBlank(varBuildApprovedDate), varBuildApprovedDate, Parent.Default)
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                FocusedBorderThickness: =1
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =5
                Size: =13
                StartYear: =1899
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey144.X + DataCardKey144.Width
                Y: =10
                ZIndex: =2

            HourValue2 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Hour(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =If(Self.Visible, DateValue2.Height, 0)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =DateValue2.Width / 2 - 5
                X: =DateValue2.X
                Y: =DateValue2.Y + DateValue2.Height + 10
                ZIndex: =3

            Separator2 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Bold
                Height: =HourValue2.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: |-
                    =":"
                Width: =10
                Wrap: =false
                X: =HourValue2.X + HourValue2.Width
                Y: =HourValue2.Y
                ZIndex: =4

            MinuteValue2 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Minute(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue2.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Width: =HourValue2.Width
                X: =HourValue2.X + HourValue2.Width + Separator2.Width
                Y: =HourValue2.Y
                ZIndex: =5

            ErrorMessage143 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue2.Y + HourValue2.Height
                ZIndex: =6

            StarVisible143 As label:
                Align: =Align.Center
                Height: =DataCardKey144.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey144.Y
                ZIndex: =7

        "'Approved By_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_approvedby"
            Default: =ThisItem.'Approved By'
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_approvedby")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =60
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_approvedby")
            Required: =false
            Update: =DataCardValue143.Text
            Visible: =!IsBlank(Self.Default) && varShowWf
            Width: =Parent.Width * 0.5
            X: =0
            Y: =10
            ZIndex: =1

            DataCardKey145 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: ="Build Processed By"
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue143.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue143 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =If(!IsBlank(varBuildApprovedDate), varApproverTmp, Parent.Default)
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                HoverFill: =RGBA(186, 202, 226, 0)
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey145.X + DataCardKey145.Width
                Y: =10
                ZIndex: =2

            ErrorMessage144 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue143.Y + DataCardValue143.Height
                ZIndex: =3

            StarVisible144 As label:
                Align: =Align.Center
                Height: =DataCardKey145.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey145.Y
                ZIndex: =4

        "'UAT Approved By_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_uatapprovedby"
            Default: =ThisItem.'UAT Approved By'
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_uatapprovedby")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_uatapprovedby")
            Required: =false
            Update: =DataCardValue150.Text
            Visible: =!IsBlank(Self.Default)
            Width: =Parent.Width * 0.5
            X: =0
            Y: =11
            ZIndex: =1

            DataCardKey154 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue150.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue150 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =If(!IsBlank(varUATApprovedDate), varApproverTmp, Parent.Default)
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey154.X + DataCardKey154.Width
                Y: =10
                ZIndex: =2

            ErrorMessage153 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue150.Y + DataCardValue150.Height
                ZIndex: =3

            StarVisible153 As label:
                Align: =Align.Center
                Height: =DataCardKey154.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey154.Y
                ZIndex: =4

        "'UAT Approval Date_DataCard1' As typedDataCard.dateTimeEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_uatapprovaldate"
            Default: =ThisItem.'UAT Approval Date'
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_uatapprovaldate")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =If(!IsBlank(DateValue4.SelectedDate), DateValue4.SelectedDate + Time(Value(HourValue4.Selected.Value), Value(MinuteValue4.Selected.Value), 0), Blank())
            Visible: =!IsBlank(Self.Default)
            Width: =Parent.Width * 0.5
            X: =0
            Y: =11
            ZIndex: =1

            DataCardKey153 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10// + (DateValue4.Height / 2) + (Self.Height / 2)
                ZIndex: =1

            DateValue4 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                DefaultDate: =If(!IsBlank(varUATApprovedDate), varUATApprovedDate, Parent.Default)
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =5
                Size: =13
                StartYear: =1899
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.7
                X: =DataCardKey153.X + DataCardKey153.Width
                Y: =10
                ZIndex: =2

            HourValue4 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Hour(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =DateValue4.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =DateValue4.Width / 2 - 5
                X: =DateValue4.X
                Y: =DateValue4.Y + DateValue4.Height + 10
                ZIndex: =3

            Separator4 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Bold
                Height: =HourValue4.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: |-
                    =":"
                Visible: =false
                Width: =10
                Wrap: =false
                X: =HourValue4.X + HourValue4.Width
                Y: =HourValue4.Y
                ZIndex: =4

            MinuteValue4 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Minute(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue4.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =HourValue4.Width
                X: =HourValue4.X + HourValue4.Width + Separator4.Width
                Y: =HourValue4.Y
                ZIndex: =5

            ErrorMessage152 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue4.Y + HourValue4.Height
                ZIndex: =6

            StarVisible152 As label:
                Align: =Align.Center
                Height: =DataCardKey153.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey153.Y
                ZIndex: =7

        "'PROD Approved By_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_prodapprovedby"
            Default: =ThisItem.'PROD Approved By'
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_prodapprovedby")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_prodapprovedby")
            Required: =false
            Update: =DataCardValue5.Text
            Visible: =!IsBlank(Self.Default)
            Width: =Parent.Width * 0.5
            X: =0
            Y: =11
            ZIndex: =1

            DataCardKey5 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue5.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue5 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =If(!IsBlank(varProdApprovedDate), varApproverTmp, Parent.Default)
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey5.X + DataCardKey5.Width
                Y: =10
                ZIndex: =2

            ErrorMessage5 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue5.Y + DataCardValue5.Height
                ZIndex: =3

            StarVisible5 As label:
                Align: =Align.Center
                Height: =DataCardKey5.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey5.Y
                ZIndex: =4

        "'PROD Deployment Date_DataCard1' As typedDataCard.dateTimeEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_proddeploymentdate"
            Default: =ThisItem.'PROD Deployment Date'
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_proddeploymentdate")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =If(!IsBlank(DateValue3.SelectedDate), DateValue3.SelectedDate + Time(Value(HourValue3.Selected.Value), Value(MinuteValue3.Selected.Value), 0), Blank())
            Visible: =!IsBlank(Self.Default)
            Width: =Parent.Width * 0.5
            X: =1
            Y: =11
            ZIndex: =1

            DataCardKey152 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 //+ (DateValue3.Height / 2) + (Self.Height / 2)
                ZIndex: =1

            DateValue3 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                DefaultDate: =If(!IsBlank(varProdApprovedDate), varProdApprovedDate, Parent.Default)
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =5
                StartYear: =1899
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey152.X + DataCardKey152.Width
                Y: =10
                ZIndex: =2

            HourValue3 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =//Text(Hour(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =DateValue3.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =DateValue3.Width / 2 - 5
                X: =DateValue3.X
                Y: =DateValue3.Y + DateValue3.Height + 10
                ZIndex: =3

            Separator3 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Bold
                Height: =HourValue3.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: |-
                    =":"
                Visible: =false
                Width: =10
                Wrap: =false
                X: =HourValue3.X + HourValue3.Width
                Y: =HourValue3.Y
                ZIndex: =4

            MinuteValue3 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Text(Minute(Parent.Default),"00")
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue3.Height
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: =Parent.DisplayName
                Visible: =false
                Width: =HourValue3.Width
                X: =HourValue3.X + HourValue3.Width + Separator3.Width
                Y: =HourValue3.Y
                ZIndex: =5

            ErrorMessage151 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue3.Y + HourValue3.Height
                ZIndex: =6

            StarVisible151 As label:
                Align: =Align.Center
                Height: =DataCardKey152.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey152.Y
                ZIndex: =7

        "'COE Comments_DataCard3' As typedDataCard.textualMultiLineEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_comments"
            Default: =ThisItem.'COE Comments'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_comments")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: |-
                =If(!IsBlank(DataCardValue146.Text), $"{varUserName} ({varUserEmailLower}) [{Today()}]: {Char(10)}{varStatus}{Char(10)}{DataCardValue146.Text} {If(!IsBlank(Self.Default), $"{Char(10)}{Char(10)}{Self.Default}", "")}")
            Visible: =varShowWf
            Width: =Parent.Width
            X: =0
            Y: =13
            ZIndex: =1

            DataCardKey148 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: ="Comments"
                Width: =(Parent.Width - 60) * 0.2
                Wrap: =false
                X: =30
                Y: =10 //+ (DataCardValue146.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue146 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =""
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =1
                Height: =If(Self.Visible, 80, 0)
                HintText: =If(Self.DisplayMode = DisplayMode.Edit, "Enter Comments", "")
                HoverFill: =RGBA(186, 202, 226, 0)
                Mode: =TextMode.MultiLine
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Visible: =Self.DisplayMode = DisplayMode.Edit
                Width: =(Parent.Width - 60) * 0.8
                X: =DataCardKey148.X + DataCardKey148.Width
                Y: =10
                ZIndex: =2

            ErrorMessage147 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue146.Y + DataCardValue146.Height
                ZIndex: =3

            StarVisible147 As label:
                Align: =Align.Center
                Height: =DataCardKey148.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey148.Y
                ZIndex: =4

            Label146 As label:
                Height: =If(IsBlank(Self.Text), 0, 120)
                Overflow: =Overflow.Scroll
                Text: =Parent.Default
                Width: =DataCardValue146.Width
                X: =DataCardValue146.X
                Y: =DataCardValue146.Y + DataCardValue146.Height + If(DataCardValue146.Visible, 5, 0)
                ZIndex: =5

        DataCard2 As typedDataCard.blankCard:
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Visible: =varIsCoE && (varItem.InitiatorEmail <> varUserEmailLower || Lower(varItem.'Created By (Delegate)'.'Primary Email') <> varUserEmailLower)
            Width: =Parent.Width
            X: =0
            Y: =13
            ZIndex: =1

            Label4_1 As label:
                Align: =Align.Center
                Fill: =RGBA(237, 237, 237, 1)
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                Size: =14
                Text: ="Initiator Details"
                Width: =Parent.Width
                ZIndex: =1

            Button2_1 As button:
                BorderThickness: =0
                DisabledFill: =RGBA(244, 244, 244, 0)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Label4_1.Height
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: |-
                    =UpdateContext({varShowInitiatorDetails: !varShowInitiatorDetails});
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Width: =Label4_1.Width
                X: =Label4_1.X
                Y: =Label4_1.Y
                ZIndex: =2

        "'Initiator Name_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_initiatorname"
            Default: =If(Parent.Mode = FormMode.New, varUserName, If(IsBlank(ThisItem.'Initiator Name'), varItem.'Created By'.'Full Name', ThisItem.'Initiator Name'))
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_initiatorname")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_initiatorname")
            Required: =false
            Update: =DataCardValue148.Text
            Visible: =DataCard2.Visible && varShowInitiatorDetails
            Width: =Parent.Width * 0.5
            X: =0
            Y: =14
            ZIndex: =1

            DataCardKey150 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue148.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue148 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =1
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey150.X + DataCardKey150.Width
                Y: =10
                ZIndex: =2

            ErrorMessage149 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue148.Y + DataCardValue148.Height
                ZIndex: =3

            StarVisible149 As label:
                Align: =Align.Center
                Height: =DataCardKey150.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey150.Y
                ZIndex: =4

        InitiatorEmail_DataCard1 As typedDataCard.textualEditCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_initiatoremail"
            Default: =If(Parent.Mode = FormMode.New, varUserEmailLower, If(IsBlank(ThisItem.InitiatorEmail), Lower(varItem.'Created By'.'Primary Email'), ThisItem.InitiatorEmail))
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_initiatoremail")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_initiatoremail")
            Required: =false
            Update: =DataCardValue149.Text
            Visible: =DataCard2.Visible && varShowInitiatorDetails
            Width: =Parent.Width * 0.5
            X: =1
            Y: =14
            ZIndex: =1

            DataCardKey151 As label:
                AutoHeight: =true
                FontWeight: =FontWeight.Semibold
                Height: =34
                Text: |-
                    =//Parent.DisplayName
                    "Initiator Email"
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue149.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue149 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.Default
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey151.X + DataCardKey151.Width
                Y: =10
                ZIndex: =2

            ErrorMessage150 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue149.Y + DataCardValue149.Height
                ZIndex: =3

            StarVisible150 As label:
                Align: =Align.Center
                Height: =DataCardKey151.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey151.Y
                ZIndex: =4

        AppId_DataCard1 As typedDataCard.textualEditCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="cr0e5_appid"
            Default: =First(ComboBox142.SelectedItems).name
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@AppRequests],DataSourceInfo.DisplayName,"cr0e5_appid")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@AppRequests], DataSourceInfo.MaxLength, "cr0e5_appid")
            Required: =false
            Update: =DataCardValue4.Text
            Visible: =false
            Width: =1229
            X: =0
            Y: =18
            ZIndex: =1

            DataCardKey4 As label:
                AutoHeight: =true
                Height: =34
                Text: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.4
                Wrap: =false
                X: =30
                Y: =10 + (DataCardValue4.Height / 2) - (Self.Height / 2)
                ZIndex: =1

            DataCardValue4 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) * 0.6
                X: =DataCardKey4.X + DataCardKey4.Width
                Y: =10
                ZIndex: =2

            ErrorMessage4 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue4.Y + DataCardValue4.Height
                ZIndex: =3

            StarVisible4 As label:
                Align: =Align.Center
                Height: =DataCardKey4.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey4.Y
                ZIndex: =4

    Icon5 As icon.ChevronLeft:
        FocusedBorderThickness: =0
        Height: =50
        Icon: =Icon.BackArrow
        OnSelect: =Back()
        PaddingBottom: =5
        PaddingLeft: =5
        PaddingRight: =5
        PaddingTop: =5
        Tooltip: ="Back"
        Visible: =varNavigated
        Width: =Self.Height
        X: =10
        Y: =Form_AppReq.Y
        ZIndex: =2

    ButtonContainer_2 As groupContainer.manualLayoutContainer:
        BorderThickness: =1
        DropShadow: =DropShadow.Bold
        Height: =btnTerminateRequest.Height + btnCancelReset_2.Y + btnTerminateRequest.Y
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =HeaderComponent_AppReq.Width
        X: =HeaderComponent_AppReq.X
        Y: =Form_AppReq.Y + Form_AppReq.Height //+ frm_Attach.Height
        ZIndex: =3

        btnDraft_2 As button:
            BorderColor: =btnTemplate.BorderColor
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            Color: =btnTemplate.Color
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            Fill: =btnTemplate.Fill
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =btnTemplate.HoverBorderColor
            HoverColor: =btnTemplate.HoverColor
            HoverFill: =btnTemplate.HoverFill
            OnSelect: |-
                =UpdateContext({varIsDraft: true});
                SubmitForm(Form_AppReq);
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =btnTemplate.Size
            Text: ="Draft"
            Visible: =Form_AppReq.Mode <> FormMode.View && If(varItemId > 0, varItem.'App Request Status' = 'App Request Status (AppRequests)'.Draft, Form_AppReq.Mode = FormMode.New) && (IsBlank(varItem) || (!IsBlank(varItem) && varItem.InitiatorEmail = varUserEmailLower))
            Width: =If(Self.Visible, 120, 0)
            X: =btnSubmit_2.X - Self.Width - If(btnSubmit_2.Visible, 20, 0)
            Y: =btnCancelReset_2.Y
            ZIndex: =3

        icnCreateNew_2 As icon.Add:
            Height: =icnDelete_2.Height
            Icon: =Icon.Add
            OnSelect: |
                =UpdateContext({varLoadSpinner: true});
                Concurrent(
                    Set(
                        varItemId,
                        0
                    ),
                    Set(
                        varNavigated,
                        false
                    ),
                    UpdateContext(
                        {
                            varItem: Blank(),
                            varAttachmentItem: Blank()
                        }
                    )
                );
                Concurrent(
                    ResetForm(Form_AppReq);
                    NewForm(Form_AppReq),
                    ResetForm(frm_Attach);
                    NewForm(frm_Attach)
                );
                UpdateContext({varLoadSpinner: false});
            PaddingBottom: =5
            PaddingLeft: =5
            PaddingRight: =5
            PaddingTop: =5
            Tooltip: ="Create New App Request"
            Visible: =!IsBlank(varItem)
            Width: =Self.Height
            X: =icnDelete_2.X - Self.Width - 20
            Y: =icnDelete_2.Y
            ZIndex: =4

        icnDelete_2 As icon.Trash:
            Color: =RGBA(184, 0, 0, 1)
            Height: =btnSubmit_2.Height
            Icon: =Icon.Trash
            OnSelect: |-
                =UpdateContext({varShowDeletePopup: true});
            PaddingBottom: =5
            PaddingLeft: =5
            PaddingRight: =5
            PaddingTop: =5
            Tooltip: ="Delete App Request"
            Visible: =!IsBlank(varItem) && varItem.InitiatorEmail = varUserEmailLower
            Width: =icnCreateNew_2.Width
            X: =btnDraft_2.X - Self.Width - 20
            Y: =btnDraft_2.Y
            ZIndex: =5

        btnCancelReset_2 As button:
            BorderColor: =btnTemplate.BorderColor
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            Color: =btnTemplate.Color
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            Fill: =btnTemplate.Fill
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =btnTemplate.HoverBorderColor
            HoverColor: =btnTemplate.HoverColor
            HoverFill: =btnTemplate.HoverFill
            OnSelect: =If(Self.Text = "Reset", ResetForm(Form_AppReq); ResetForm(frm_Attach), If(Self.Text = "Cancel", ViewForm(Form_AppReq); ViewForm(frm_Attach), Back()));
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =btnTemplate.Size
            Text: =If(Form_AppReq.Mode = FormMode.Edit, "Cancel", If(Form_AppReq.Mode = FormMode.New, "Reset", "Back"))
            Visible: =IsBlank(varItem) || (!IsBlank(varItem) && varItem.InitiatorEmail = varUserEmailLower)
            Width: =If(Self.Visible, 120, 0)
            X: =Form_AppReq.X + Form_AppReq.Width - Self.Width - 30
            Y: =10
            ZIndex: =6

        btnSubmit_2 As button:
            BorderColor: =btnTemplate.BorderColor
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            Color: =btnTemplate.Color
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            Fill: =btnTemplate.Fill
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =btnTemplate.HoverBorderColor
            HoverColor: =btnTemplate.HoverColor
            HoverFill: =btnTemplate.HoverFill
            OnSelect: |-
                =If(Form_AppReq.Mode = FormMode.View, EditForm(Form_AppReq); EditForm(frm_Attach), 
                    UpdateContext({varIsDraft: false}); SubmitForm(Form_AppReq)
                );
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =btnTemplate.Size
            Text: =If(Form_AppReq.Mode = FormMode.View, "Edit",  "Submit")
            Visible: =IsBlank(varItem) || (!IsBlank(varItem) && varItem.InitiatorEmail = varUserEmailLower && Not(varItem.'App Request Status' in ['App Request Status (AppRequests)'.UAT, 'App Request Status (AppRequests)'.Production]))
            Width: =If(Self.Visible, 120, 0)
            X: =btnCancelReset_2.X - Self.Width - If(btnCancelReset_2.Visible, 20, 0)
            Y: =btnCancelReset_2.Y
            ZIndex: =7

        Label3 As label:
            Align: =Align.Right
            Color: |-
                =If(Self.Visible, If(Value(Substitute(Last(Split(Self.Text, " ")).Value, "%", "")) > Value(varCodeReviewPercentThreshold),
                RGBA(0, 0, 0, 1), Color.Red), RGBA(0, 0, 0, 1))
            FontWeight: =FontWeight.Semibold
            OnSelect: |-
                =With({varUrlTemp: varCodeReviewAppUrl & If(IsBlank(Find("?", varCodeReviewAppUrl)), "?", "&") & varCodeReviewQueryString & "=" & Text(First(SortByColumns(LookUp(SortByColumns(AddColumns(Rev_SolutionReview, "AppUrlTxt", Text('App Document URI')), "modifiedon", SortOrder.Descending), AppUrlTxt = varItem.'App Url' && Chc_SolutionReview_Status = Chc_StatusImport.Done).Reviews, "modifiedon", SortOrder.Descending)).Review)},  Launch(varUrlTemp, {}, LaunchTarget.New));
            Text: |-
                =With({varReviewTmp: If(!IsBlank(varItem.'App Url'), LookUp(SortByColumns(AddColumns(Rev_SolutionReview, "AppUrlTxt", Text('App Document URI')), "modifiedon", SortOrder.Descending), AppUrlTxt = varItem.'App Url' && Chc_SolutionReview_Status = Chc_StatusImport.Done), Blank())}, If(!IsBlank(varReviewTmp), $"Code Review Score: {varReviewTmp.Nb_SolutionScore * 100}%", Blank()))
            Underline: =true
            Visible: =!IsBlank(Self.Text)
            Width: =225
            X: =Icon4.X - Self.Width - 20
            Y: =Icon4.Y
            ZIndex: =8

        btnApprove As button:
            BorderColor: =RGBA(99, 139, 44, 1)
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            DisplayMode: =If(IsBlank(DataCardValue146), DisplayMode.Disabled, If(ComboBox147.Visible, If(IsEmpty(ComboBox147.SelectedItems) || IsBlank(ComboBox147.SelectedItems), DisplayMode.Disabled, DisplayMode.Edit), DisplayMode.Edit))
            Fill: =RGBA(54, 176, 75, 1)
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =ColorFade(Self.BorderColor, -15%)
            HoverColor: =Self.Color
            HoverFill: =ColorFade(Self.Fill, -15%)
            OnSelect: |
                =/*UpdateContext(
                    {
                        varLoadSpinner: true,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varUATApproverTmp: Blank(),
                        varBuildApproverTmp: Blank(),
                        varProdApproverTmp: Blank(),
                        varUATDateTmp: Blank(),
                        varProdDateTmp: Blank(),
                        varBuildDateTmp: Blank(),
                        varDeveloperNameTmp: Blank()
                    }
                );
                UpdateContext(
                    {
                        varStatusTmp: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build in progress',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.UAT,
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.Production,
                            'App Request Status (AppRequests)'.'Build in progress'
                        ),
                        varApproverTmp: $"{varUserName} ({varUserEmailLower})"
                    }
                );
                UpdateContext(
                    {
                        varCommentsTmp: If(
                            !IsBlank(TextInput2.Text),
                            $"{varUserName} ({varUserEmailLower}) [{Today()}]: {Text(varStatusTmp)}{Char(10)}{TextInput2.Text} {If(
                                !IsBlank(varItem.'COE Comments'),
                                $"{Char(10)}{Char(10)}{varItem.'COE Comments'}",
                                ""
                            )}",
                            varItem.'COE Comments'
                        )
                    }
                );
                Switch(
                    varItem.'App Request Status',
                    'App Request Status (AppRequests)'.'Build Approval Requested',
                    UpdateContext(
                        {
                            varBuildDateTmp: Today(),
                            varBuildApproverTmp: varApproverTmp
                        }
                    ),
                    'App Request Status (AppRequests)'.'UAT Deployment Requested',
                    UpdateContext(
                        {
                            varUATApproverTmp: varApproverTmp,
                            varUATDateTmp: Today()
                        }
                    ),
                    'App Request Status (AppRequests)'.'Prod Deployment Requested',
                    UpdateContext(
                        {
                            varProdApproverTmp: varApproverTmp,
                            varProdDateTmp: Today()
                        }
                    ),
                    UpdateContext(
                        {
                            varBuildDateTmp: Today(),
                            varBuildApproverTmp: varApproverTmp
                        }
                    )
                );
                If(
                    ComboBox1.Visible,
                    UpdateContext(
                        {
                            varDeveloperNameTmp: Concat(
                                ComboBox1.SelectedItems,
                                $"{DisplayName} ({Mail})",
                                "; "
                            )
                        }
                    )
                );
                With(
                    {
                        varItemTmp: IfError(
                            Patch(
                                AppRequests,
                                LookUp(
                                    AppRequests,
                                    Id = varItem.Id
                                ),
                                {
                                    'App Request Status': varStatusTmp,
                                    'COE Comments': varCommentsTmp,
                                    AppApprovalDate: varBuildDateTmp,
                                    'Approved By': varBuildApproverTmp,
                                    'UAT Approval Date': varUATDateTmp,
                                    'UAT Approved By': varUATApproverTmp,
                                    'PROD Deployment Date': varProdDateTmp,
                                    'PROD Approved By': varProdApproverTmp,
                                    'Developer Name': varDeveloperNameTmp
                                }
                            ),
                            Blank()
                        )
                    },
                    If(
                        !IsBlank(varItemTmp),
                        UpdateContext({varItem: varItemTmp});
                        Notify(
                            "Request updated successfully.",
                            NotificationType.Success,
                            15000
                        ),
                        Notify(
                            "Sorry something went wrong. Please try again later.",
                            NotificationType.Error,
                            15000
                        )
                    )
                );
                Concurrent(
                    Refresh(AppRequests),
                    Reset(TextInput2),
                    Reset(ComboBox1)
                );
                UpdateContext(
                    {
                        varLoadSpinner: false,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varUATApproverTmp: Blank(),
                        varBuildApproverTmp: Blank(),
                        varProdApproverTmp: Blank(),
                        varUATDateTmp: Blank(),
                        varProdDateTmp: Blank(),
                        varBuildDateTmp: Blank(),
                        varDeveloperNameTmp: Blank()
                    }
                );*/
                UpdateContext({varLoadSpinner: true});
                UpdateContext(
                    {
                        varStatus: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build in progress',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.UAT,
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.Production,
                            'App Request Status (AppRequests)'.'Build in progress'
                        )
                    }
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'Build in progress',
                    UpdateContext({varBuildApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.UAT,
                    UpdateContext({varUATApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.Production,
                    UpdateContext({varProdApprovedDate: Today()})
                );
                If(
                    Form_AppReq.Mode = FormMode.View,
                    EditForm(Form_AppReq)
                );
                SubmitForm(Form_AppReq);
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =12
            Text: |-
                =Switch(varItem.'App Request Status', 'App Request Status (AppRequests)'.'Build Approval Requested', "Approve Build", 'App Request Status (AppRequests)'.'UAT Deployment Requested', "Approve UAT Deployment", 
                'App Request Status (AppRequests)'.'Prod Deployment Requested', "Approve PROD Deployment", Blank())
            Visible: =varIsCoE && varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Prod Deployment Requested', 'App Request Status (AppRequests)'.'UAT Deployment Requested']
            Width: =If(Self.Visible, 250, 0)
            X: |-
                =//TextInput2.X + TextInput2.Width + TextInput2.Y
                btnSendToInitiator.X - Self.Width - If(btnSendToInitiator.Visible, 20, 0)
            Y: |-
                =//btnCancelReset_2.Y
                btnSendToInitiator.Y
            ZIndex: =9

        TextInput2 As text:
            BorderThickness: =1
            Default: =""
            Height: =Parent.Height - Self.Y - btnCancelReset_2.Y
            HintText: ="Comments (Required)"
            Mode: =TextMode.MultiLine
            PaddingLeft: =5
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Reset: =true
            Size: =12
            Visible: |-
                =/*varIsCoE && varItem.'App Request Status' in ['App Request Status (AppRequests)'.'Build Approval Requested', 'App Request Status (AppRequests)'.'Prod Deployment Requested', 'App Request Status (AppRequests)'.'UAT Deployment Requested']*/
                false
            Width: =350
            X: =Form_AppReq.X + 30
            Y: =ComboBox1.Y + ComboBox1.Height
            ZIndex: =10

        ComboBox1 As combobox:
            BorderThickness: =1
            DefaultSelectedItems: |-
                =If(!IsBlank(varItem), Filter(ForAll(Filter(Split(varItem.'Developer Name', ")"), !IsBlank(Value)),First(Office365Users.SearchUser({searchTerm: Last(Split(ThisRecord.Value, "(")).Value, top: 1}))), !IsBlank(Mail)), Blank())
            DisplayFields: =["DisplayName","Mail"]
            FocusedBorderThickness: =1
            Height: =If(Self.Visible, 40, 0)
            InputTextPlaceholder: ="Select Developer(s)"
            Items: |-
                =Filter(Office365Users.SearchUser({searchTerm: Self.SearchText, top: 50}), !IsBlank(Mail), AccountEnabled)
            NoSelectionText: ="Select Developer(s)"
            Reset: =true
            SearchFields: =["DisplayName","Mail"]
            SearchItems: |-
                =Search(Filter(Office365Users.SearchUser({searchTerm: Self.SearchText, top: 50}), !IsBlank(Mail), AccountEnabled),ComboBox1.SearchText,"DisplayName","Mail")
            Size: =12
            Template: =ListItemTemplate.Double
            Visible: |-
                =/*TextInput2.Visible && varItem.'Who will develop this app?' in ['Who will develop this app? (AppRequests)'.'Developer assisted App development', 'Who will develop this app? (AppRequests)'.'I want COE to build the app'] && varItem.'App Request Status' = 'App Request Status (AppRequests)'.'Build Approval Requested'*/
                false
            Width: =TextInput2.Width
            X: =Form_AppReq.X + 30
            Y: =btnCancelReset_2.Y
            ZIndex: =11

        btnSendToInitiator As button:
            BorderColor: =RGBA(221, 79, 14, 1)
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            Color: =RGBA(26, 26, 26, 1)
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            DisplayMode: =If(IsBlank(DataCardValue146), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(251, 188, 159, 1)
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =ColorFade(Self.BorderColor, -15%)
            HoverColor: =Self.Color
            HoverFill: =ColorFade(Self.Fill, -15%)
            OnSelect: |
                =/*UpdateContext(
                    {
                        varLoadSpinner: true,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varBuildApprovedByTmp: Blank(),
                        varUATApprovedByTmp: Blank(),
                        varProdApporvedByTmp: Blank()
                    }
                );
                UpdateContext(
                    {
                        varStatusTmp: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build Approval sent back to initiator',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.'UAT Deployment sent back to initiator',
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.'Prod Deployment sent back to initiator',
                            'App Request Status (AppRequests)'.'Build Approval sent back to initiator'
                        ),
                        varApproverTmp: $"{varUserName} ({varUserEmailLower})"
                    }
                );
                UpdateContext(
                    {
                        varCommentsTmp: If(
                            !IsBlank(TextInput2.Text),
                            $"{varUserName} ({varUserEmailLower}) [{Today()}]: {Text(varStatusTmp)}{Char(10)}{TextInput2.Text} {If(
                                !IsBlank(varItem.'COE Comments'),
                                $"{Char(10)}{Char(10)}{varItem.'COE Comments'}",
                                ""
                            )}",
                            varItem.'COE Comments'
                        )
                    }
                );
                Switch(
                    varItem.'App Request Status',
                    'App Request Status (AppRequests)'.'Build Approval Requested',
                    UpdateContext({varBuildApprovedByTmp: varApproverTmp}),
                    'App Request Status (AppRequests)'.'UAT Deployment Requested',
                    UpdateContext({varUATApprovedByTmp: varApproverTmp}),
                    'App Request Status (AppRequests)'.'Prod Deployment Requested',
                    UpdateContext({varProdApporvedByTmp: varApproverTmp}),
                    UpdateContext({varBuildApprovedByTmp: varApproverTmp})
                );
                With(
                    {
                        varItemTmp: IfError(
                            Patch(
                                AppRequests,
                                LookUp(
                                    AppRequests,
                                    Id = varItem.Id
                                ),
                                {
                                    'App Request Status': varStatusTmp,
                                    'COE Comments': varCommentsTmp,
                                    'Approved By': varBuildApprovedByTmp,
                                    'UAT Approved By': varUATApprovedByTmp,
                                    'PROD Approved By': varProdApporvedByTmp
                                }
                            ),
                            Blank()
                        )
                    },
                    If(
                        !IsBlank(varItemTmp),
                        UpdateContext({varItem: varItemTmp});
                        Notify(
                            "Request updated successfully.",
                            NotificationType.Success,
                            15000
                        ),
                        Notify(
                            "Sorry something went wrong. Please try again later.",
                            NotificationType.Error,
                            15000
                        )
                    )
                );
                Concurrent(
                    Refresh(AppRequests),
                    Reset(TextInput2),
                    Reset(ComboBox1)
                );
                UpdateContext(
                    {
                        varLoadSpinner: false,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varBuildApprovedByTmp: Blank(),
                        varUATApprovedByTmp: Blank(),
                        varProdApporvedByTmp: Blank()
                    }
                );
                */
                UpdateContext({varLoadSpinner: true});
                UpdateContext(
                    {
                        varStatus: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build Approval sent back to initiator',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.'UAT Deployment sent back to initiator',
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.'Prod Deployment sent back to initiator',
                            'App Request Status (AppRequests)'.'Build Approval sent back to initiator'
                        )
                    }
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'Build Approval sent back to initiator',
                    UpdateContext({varBuildApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'UAT Deployment sent back to initiator',
                    UpdateContext({varUATApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'Prod Deployment sent back to initiator',
                    UpdateContext({varProdApprovedDate: Today()})
                );
                If(
                    Form_AppReq.Mode = FormMode.View,
                    EditForm(Form_AppReq)
                );
                SubmitForm(Form_AppReq);
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =btnApprove.Size
            Text: |-
                =Switch(varItem.'App Request Status', 'App Request Status (AppRequests)'.'Build Approval Requested', "Send Build Request To Initiator", 'App Request Status (AppRequests)'.'UAT Deployment Requested', "Send UAT Request To Initiatorl", 
                'App Request Status (AppRequests)'.'Prod Deployment Requested', "Send PROD Request To Initiator", Blank())
            Visible: =btnApprove.Visible
            Width: =If(Self.Visible, 260, 0)
            X: |-
                =//TextInput2.X + TextInput2.Width + TextInput2.Y
                btnTerminateRequest.X - Self.Width - If(btnTerminateRequest.Visible, 20, 0)
            Y: |-
                =//btnApprove.Y + btnApprove.Height + btnApprove.Y
                btnTerminateRequest.Y
            ZIndex: =12

        btnTerminateRequest As button:
            BorderColor: =RGBA(118, 0, 0, 1)
            BorderStyle: =btnTemplate.BorderStyle
            BorderThickness: =btnTemplate.BorderThickness
            DisabledBorderColor: =btnTemplate.DisabledBorderColor
            DisabledColor: =btnTemplate.DisabledBorderColor
            DisabledFill: =btnTemplate.DisabledFill
            DisplayMode: =If(IsBlank(DataCardValue146), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(184, 0, 0, 1)
            FocusedBorderColor: =btnTemplate.FocusedBorderColor
            FocusedBorderThickness: =btnTemplate.FocusedBorderThickness
            Font: =btnTemplate.Font
            FontWeight: =btnTemplate.FontWeight
            Height: =If(Self.Visible, 40, 0)
            HoverBorderColor: =ColorFade(Self.BorderColor, -15%)
            HoverColor: =Self.Color
            HoverFill: =ColorFade(Self.Fill, -15%)
            OnSelect: |
                =/*UpdateContext(
                    {
                        varLoadSpinner: true,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varBuildApprovedByTmp: Blank(),
                        varUATApprovedByTmp: Blank(),
                        varProdApporvedByTmp: Blank()
                    }
                );
                UpdateContext(
                    {
                        varStatusTmp: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build Approval Rejected',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.'UAT Deployment Rejected',
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.'Prod Deployment Rejected',
                            'App Request Status (AppRequests)'.'Build Approval Rejected'
                        ),
                        varApproverTmp: $"{varUserName} ({varUserEmailLower})"
                    }
                );
                UpdateContext(
                    {
                        varCommentsTmp: If(
                            !IsBlank(TextInput2.Text),
                            $"{varUserName} ({varUserEmailLower}) [{Today()}]: {Text(varStatusTmp)}{Char(10)}{TextInput2.Text} {If(
                                !IsBlank(varItem.'COE Comments'),
                                $"{Char(10)}{Char(10)}{varItem.'COE Comments'}",
                                ""
                            )}",
                            varItem.'COE Comments'
                        )
                    }
                );
                Switch(
                    varItem.'App Request Status',
                    'App Request Status (AppRequests)'.'Build Approval Requested',
                    UpdateContext({varBuildApprovedByTmp: varApproverTmp}),
                    'App Request Status (AppRequests)'.'UAT Deployment Requested',
                    UpdateContext({varUATApprovedByTmp: varApproverTmp}),
                    'App Request Status (AppRequests)'.'Prod Deployment Requested',
                    UpdateContext({varProdApporvedByTmp: varApproverTmp}),
                    UpdateContext({varBuildApprovedByTmp: varApproverTmp})
                );
                With(
                    {
                        varItemTmp: IfError(
                            Patch(
                                AppRequests,
                                LookUp(
                                    AppRequests,
                                    Id = varItem.Id
                                ),
                                {
                                    'App Request Status': varStatusTmp,
                                    'COE Comments': varCommentsTmp,
                                    'Approved By': varBuildApprovedByTmp,
                                    'UAT Approved By': varUATApprovedByTmp,
                                    'PROD Approved By': varProdApporvedByTmp
                                }
                            ),
                            Blank()
                        )
                    },
                    If(
                        !IsBlank(varItemTmp),
                        UpdateContext({varItem: varItemTmp});
                        Notify(
                            "Request updated successfully.",
                            NotificationType.Success,
                            15000
                        ),
                        Notify(
                            "Sorry something went wrong. Please try again later.",
                            NotificationType.Error,
                            15000
                        )
                    )
                );
                Concurrent(
                    Refresh(AppRequests),
                    Reset(TextInput2),
                    Reset(ComboBox1)
                );
                UpdateContext(
                    {
                        varLoadSpinner: false,
                        varStatusTmp: Blank(),
                        varCommentsTmp: Blank(),
                        varApproverTmp: Blank(),
                        varBuildApprovedByTmp: Blank(),
                        varUATApprovedByTmp: Blank(),
                        varProdApporvedByTmp: Blank()
                    }
                );*/
                UpdateContext({varLoadSpinner: true});
                UpdateContext(
                    {
                        varStatus: Switch(
                            varItem.'App Request Status',
                            'App Request Status (AppRequests)'.'Build Approval Requested',
                            'App Request Status (AppRequests)'.'Build Approval Rejected',
                            'App Request Status (AppRequests)'.'UAT Deployment Requested',
                            'App Request Status (AppRequests)'.'UAT Deployment Rejected',
                            'App Request Status (AppRequests)'.'Prod Deployment Requested',
                            'App Request Status (AppRequests)'.'Prod Deployment Rejected',
                            'App Request Status (AppRequests)'.'Build Approval Rejected'
                        )
                    }
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'Build Approval Rejected',
                    UpdateContext({varBuildApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'UAT Deployment Rejected',
                    UpdateContext({varUATApprovedDate: Today()})
                );
                If(
                    varStatus = 'App Request Status (AppRequests)'.'Prod Deployment Rejected',
                    UpdateContext({varProdApprovedDate: Today()})
                );
                If(
                    Form_AppReq.Mode = FormMode.View,
                    EditForm(Form_AppReq)
                );
                SubmitForm(Form_AppReq);
            PressedBorderColor: =btnTemplate.PressedBorderColor
            PressedColor: =btnTemplate.PressedColor
            PressedFill: =btnTemplate.PressedFill
            RadiusBottomLeft: =btnTemplate.RadiusBottomLeft
            RadiusBottomRight: =btnTemplate.RadiusBottomRight
            RadiusTopLeft: =btnTemplate.RadiusTopLeft
            RadiusTopRight: =btnTemplate.RadiusTopRight
            Size: =btnApprove.Size
            Text: ="Cancel(Terminate) Request"
            Visible: =btnApprove.Visible
            Width: =If(Self.Visible, 250, 0)
            X: |-
                =//btnSendToInitiator.X + btnSendToInitiator.Width + btnApprove.Y
                btnCancelReset_2.X + btnCancelReset_2.Width - Self.Width
            Y: =btnCancelReset_2.Y + btnCancelReset_2.Height + If(btnCancelReset_2.Visible, 20, 0)
            ZIndex: =13

        Icon4 As icon.Attachment:
            Height: =40
            Icon: =Icon.PaperClip
            OnSelect: |-
                =UpdateContext({varShowAttachment: true});
            PaddingBottom: =Self.PaddingTop
            PaddingLeft: =Self.PaddingTop
            PaddingRight: =Self.PaddingBottom
            PaddingTop: =icnCreateNew_2.PaddingTop
            Tooltip: ="Show Attachment(s)"
            Width: =Self.Height
            X: |-
                =
                If(varItem.InitiatorEmail <> varUserEmailLower && varIsCoE, btnApprove.X, icnCreateNew_2.X) - Self.Width - 20
            Y: =If(varItem.InitiatorEmail <> varUserEmailLower && varIsCoE, btnApprove.Y, icnCreateNew_2.Y)
            ZIndex: =14

    DeletePopupContainer As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =SpinnerComponent_AppReq.Fill
        Height: =Parent.Height - Self.Y
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =varShowDeletePopup
        Width: =Parent.Width - Self.X - Self.X
        X: =HeaderComponent_AppReq.X
        Y: =HeaderComponent_AppReq.Y + HeaderComponent_AppReq.Height
        ZIndex: =4

        lblDeleteMsg_AppReq As label:
            Fill: =RGBA(255, 255, 255, 1)
            FontWeight: =FontWeight.Semibold
            Height: =120
            PaddingBottom: =Self.PaddingTop
            PaddingLeft: =Self.PaddingTop
            PaddingRight: =Self.PaddingLeft
            PaddingTop: =20
            Size: =14
            Text: |-
                ="Are you sure to Delete app request: "& varItemId&"?"
            VerticalAlign: =VerticalAlign.Top
            Width: =390
            X: =(Parent.Width - Self.Width) * 0.5
            Y: =(Parent.Height - Parent.Y - Self.Height) * 0.5
            ZIndex: =1

        btnConfirmDelete_AppReq As button:
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Fill: =RGBA(54, 176, 75, 1)
            OnSelect: |-
                =UpdateContext({varLoadSpinner: true});
                Concurrent(With({varIdTxt: Text(varItemId)}, RemoveIf(AppRequests, Id = varIdTxt)),
                    With({varTitleText: varAttachmentItem.Title}, RemoveIf(AttachmentList, Title = varTitleText)));
                Concurrent(Refresh(AppRequests), Refresh(AttachmentList));
                Select(btnCancelDelete_AppReq);
                Select(icnCreateNew_2);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: ="Yes"
            Width: =80
            X: =lblDeleteMsg_AppReq.X + (lblDeleteMsg_AppReq.Width - Self.Width - btnConfirmDelete_AppReq.Width - 20) * 0.5
            Y: =lblDeleteMsg_AppReq.Y + lblDeleteMsg_AppReq.Height - Self.Height - lblDeleteMsg_AppReq.PaddingBottom
            ZIndex: =2

        btnCancelDelete_AppReq As button:
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Fill: =RGBA(118, 0, 0, 1)
            Height: =btnConfirmDelete_AppReq.Height
            OnSelect: |-
                =UpdateContext({varShowDeletePopup: false});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: ="No"
            Width: =80
            X: =btnConfirmDelete_AppReq.X + btnConfirmDelete_AppReq.Width + 20
            Y: =btnConfirmDelete_AppReq.Y
            ZIndex: =3

    AttachmentContainer As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =DeletePopupContainer.Fill
        Height: =DeletePopupContainer.Height
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =varShowAttachment
        Width: =DeletePopupContainer.Width
        X: =DeletePopupContainer.X
        Y: =DeletePopupContainer.Y
        ZIndex: =5

        frm_Attach As form:
            DataSource: =AttachmentList
            DefaultMode: |-
                =//If(!IsBlank(varItem) && varIsCoE && varItem.InitiatorEmail <> varUserEmailLower, FormMode.View, 
                If(IsBlank(varAttachmentItem), FormMode.New, FormMode.Edit)
                //)
            Fill: =RGBA(255, 255, 255, 1)
            Height: =200
            Item: |-
                =With({varTitleTmp: Text(varItem.AppRequest)},
                If(!IsBlank(varItem), LookUp(AttachmentList, Title = varTitleTmp), Blank()))
            OnSuccess: |-
                =UpdateContext({varAttachmentItem: Self.LastSubmit});
                UpdateContext({varLoadSpinner: false});
                Notify("App Request Submitted Successfully", NotificationType.Success);
            SnapToColumns: =false
            Width: =Form_AppReq.Width
            X: =Form_AppReq.X
            Y: |-
                =//Form_AppReq.Y + Form_AppReq.Height
                (Parent.Height - Self.Height)*0.5
            ZIndex: =1

            Attachments_DataCard1 As typedDataCard.attachmentsEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="{Attachments}"
                Default: =ThisItem.Attachments
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@AttachmentList],DataSourceInfo.DisplayName,"{Attachments}")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Parent.Height
                Required: =false
                Update: =DataCardValue1.Attachments
                Width: =Parent.Width
                X: =0
                Y: =
                ZIndex: =1

                DataCardKey1 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                DataCardValue1 As attachments:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    BorderThickness: =1
                    DisplayMode: =Parent.DisplayMode
                    DropTargetBorderThickness: =1
                    Height: =130
                    IsInDataCard: =true
                    Items: =Parent.Default
                    PaddingBottom: =5
                    PaddingLeft: =
                    PaddingRight: =5
                    PaddingTop: =5
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey1.Y + DataCardKey1.Height + 5
                    ZIndex: =2

                ErrorMessage1 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardValue1.Y + DataCardValue1.Height
                    ZIndex: =3

                StarVisible1 As label:
                    Align: =Align.Center
                    Height: =DataCardKey1.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey1.Y
                    ZIndex: =4

            Title_DataCard11 As typedDataCard.textualEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="Title"
                Default: =If(!IsBlank(varItem), Text(varItem.AppRequest), Blank())
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@AttachmentList],DataSourceInfo.DisplayName,"Title")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@AttachmentList], DataSourceInfo.MaxLength, "Title")
                Required: =true
                Update: =DataCardValue2.Text
                Visible: =false
                Width: =364
                X: =1
                Y: =0
                ZIndex: =1

                DataCardKey2 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                DataCardValue2 As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey2.Y + DataCardKey2.Height + 5
                    ZIndex: =2

                ErrorMessage2 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardValue2.Y + DataCardValue2.Height
                    ZIndex: =3

                StarVisible2 As label:
                    Align: =Align.Center
                    Height: =DataCardKey2.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey2.Y
                    ZIndex: =4

        Icon3 As icon.Cancel:
            Height: =40
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varShowAttachment: false});
            Tooltip: ="Close attachment popup"
            Width: =Self.Height
            X: =frm_Attach.X + frm_Attach.Width - Self.Width - 20
            Y: =frm_Attach.Y 
            ZIndex: =2

    HeaderComponent_AppReq As HeaderComponent:
        BackgroundColor: =lblHeader.Fill
        FontColor: =lblHeader.Color
        LogoImage: =Picture1
        LogoLeftPosition: =NavComponent_AppReq.MinHeight
        Text: =If(varItemId, $"App Request - {varItemId}", "New App Request")
        ZIndex: =6

    SpinnerComponent_AppReq As SpinnerComponent:
        Height: =Parent.Height - Self.Y
        Visible: =varLoadSpinner
        Width: =Parent.Width - Self.X
        ZIndex: =7

    NavComponent_AppReq As NavComponent:
        IconColor: =lblHeader.Color
        NavigationItemsColor: =lblHeader.Color
        NavigationItemsFill: =lblHeader.Fill
        ZIndex: =8

    AccessDeniedComponent_AppReq As AccessDeniedComponent:
        Height: =Parent.Height - Self.Y
        Visible: =!LookUp(colNavItems, Screen = App.ActiveScreen).HasAccess
        Width: =Parent.Width
        Y: =HeaderComponent_AppReq.Y + HeaderComponent_AppReq.Height
        ZIndex: =9

